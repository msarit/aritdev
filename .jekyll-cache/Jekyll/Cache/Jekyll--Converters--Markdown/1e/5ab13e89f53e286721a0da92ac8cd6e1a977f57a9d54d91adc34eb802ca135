I"V"<p>I learned a lot from working on a <a href="https://github.com/forem/forem/issues/10061">Forem issue</a>, where comments containing Comment Liquid Tags were rendered invalid if the tagged comment was later deleted.</p>

<p>Yes. That was a mouthful.</p>

<p>I created a <a href="https://www.loom.com/share/78abdc62f7624a54b578e12466046c6e">walkthrough video</a> sharing my troubleshooting process. If you would rather read, I have reproduced my process below the video image. 😊</p>

<hr />

<p><a href="https://www.loom.com/share/78abdc62f7624a54b578e12466046c6e"><img src="https://dev-to-uploads.s3.amazonaws.com/i/nedv11akpe58hf69f27y.png" alt="Image of Video" /></a></p>

<hr />

<p>Say <em><strong>Arit</strong></em> creates a comment, and then <em><strong>Bene</strong></em> creates their comment and includes a Liquid Tag to Arit’s comment:</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/uv7w2uu4wyi04hd9p2zr.png" alt="Comment By Arit" /></p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/qsmnsu0r8qu9582jqk43.png" alt="Comment By Bene" /></p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/dpd2yzpicx76dc3mm6v4.png" alt="Bene Comment with Liquid Tag to Arit Comment" /></p>

<p>Next, Arit deletes her comment. When Bene goes to edit her comment containing the tag to Arit’s now-deleted comment, she sees an error message. Also, the permalink to Bene’s comment 404’s.</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/l9s1kstpa2k2tnwrixah.png" alt="Arit Deletes Comment" /></p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/nj0lum6c5gjsbogqtobk.png" alt="Bene Edits Comment" /></p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/7uxt9hc1l2kgf41pwdsm.png" alt="Bene Comment Error" /></p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/j7b8ugm658l8k0dlb5ge.png" alt="Bene Comment 404s" /></p>

<hr />

<p>Looking in <a href="https://github.com/forem/forem">the code</a>, the <code class="language-plaintext highlighter-rouge">app &gt; liquid_tags &gt; comment_tag.rb</code> file initializes and renders the tagged comment. The <code class="language-plaintext highlighter-rouge">app &gt; views &gt; comments &gt; _liquid.html.erb</code> file is the actual tagged-comment view.</p>

<p>Looking at the <code class="language-plaintext highlighter-rouge">find_comment</code> method in <code class="language-plaintext highlighter-rouge">comment_tag.rb</code>, we see that the error message raised by the exception matches what we see in the application:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="k">def</span> <span class="nf">find_comment</span><span class="p">(</span><span class="n">id_code</span><span class="p">)</span>
   <span class="no">Comment</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">id_code</span><span class="p">.</span><span class="nf">to_i</span><span class="p">(</span><span class="mi">26</span><span class="p">))</span>
<span class="k">rescue</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span>
   <span class="k">raise</span> <span class="no">StandardError</span><span class="p">,</span> <span class="s2">"Invalid comment ID or comment does not exist"</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Intuitively, I felt like a good solution would be to return a message like “Comment Not Found” within the Liquid Tag, while leaving the enclosing comment intact. But I was not sure how to bypass the error exception in order to accomplish this.</p>

<p>After a short tete-a-tete with my teammate <a href="https://dev.to/rhymes">Rhymes</a> (🙏🏾), I learned a <a href="https://dev.to/rhymes">key difference</a> between the <code class="language-plaintext highlighter-rouge">.find</code> and <code class="language-plaintext highlighter-rouge">.find_by</code> methods: if the record is not found, <code class="language-plaintext highlighter-rouge">.find</code> always raises an exception while <code class="language-plaintext highlighter-rouge">.find_by</code> returns <code class="language-plaintext highlighter-rouge">nil</code>.</p>

<p>By calling <code class="language-plaintext highlighter-rouge">.find_by</code>, I could then render different views in <code class="language-plaintext highlighter-rouge">_liquid.html.erb</code>, depending on whether the local <code class="language-plaintext highlighter-rouge">comment</code> variable (passed into the <code class="language-plaintext highlighter-rouge">render</code> method) existed.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="k">def</span> <span class="nf">find_comment</span><span class="p">(</span><span class="n">id_code</span><span class="p">)</span>
   <span class="no">Comment</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="n">id_code</span><span class="p">.</span><span class="nf">to_i</span><span class="p">(</span><span class="mi">26</span><span class="p">))</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="o">&lt;</span><span class="n">div</span> <span class="k">class</span><span class="o">=</span><span class="s2">"liquid-comment"</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="sx">% if </span><span class="n">comment</span> <span class="sx">%&gt;
    &lt;div class="details"&gt;</span>
      <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">"/&lt;%= comment.user.username %&gt;"</span><span class="o">&gt;</span>
      <span class="o">...</span>
      <span class="o">...</span>
  <span class="o">&lt;</span><span class="sx">% else </span><span class="o">%&gt;</span>
    <span class="o">&lt;</span><span class="n">div</span> <span class="k">class</span><span class="o">=</span><span class="s2">"body"</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Comment</span> <span class="no">Not</span> <span class="no">Found</span><span class="o">&lt;</span><span class="sr">/p&gt;
    &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
<span class="o">&lt;</span><span class="sr">/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>But when I tested my implementation, I got another error:</p>

<figure class="highlight"><pre><code class="language-text" data-lang="text">Unsupported argument type: 53 (Integer)</code></pre></figure>

<p>The only code I changed that accepts an argument was the <code class="language-plaintext highlighter-rouge">find_comment</code> method. I realized that <code class="language-plaintext highlighter-rouge">.find_by</code> requires me to specify which attribute to search by. Furthermore, the <code class="language-plaintext highlighter-rouge">Comment.id_code</code> attribute is a string, not an integer. So I made the appropriate corrections:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre> <span class="k">def</span> <span class="nf">find_comment</span><span class="p">(</span><span class="n">id_code</span><span class="p">)</span>
    <span class="no">Comment</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id_code: </span><span class="n">id_code</span><span class="p">)</span>
 <span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Testing my local application, everything worked as expected :tada::</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/fvz1sfrsbb015yuy8mu5.png" alt="It's Working" /></p>

<hr />

<p>Figuring out how to solve a certain coding problem is sometimes akin to detective work. 🔎 You use the clues provided in the codebase (or by other devs) to figure out what needs to be changed, and where.</p>

<p>I hope this was helpful to someone. 😄 Thanks for reading/watching!</p>
:ET